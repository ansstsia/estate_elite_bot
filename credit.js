function showCreditCalc() {
  document.getElementById("content").innerHTML = `
    <div style="display: flex; flex-direction: column; gap: 10px; ">
      <label>–°—É–º–º–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ (BYN): <input id="amount" type="number" min="0" /></label>
      <label>–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å (BYN): <input id="down" type="number" min="0" /></label>
      <label>–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ (–ª–µ—Ç): <input id="years" type="number" min="1" /></label>
      <label>–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ (% –≥–æ–¥–æ–≤—ã—Ö): <input id="rate" type="number" step="0.01" value="14" min="0" /></label>
      <button onclick="calculateCredit()">–†–∞—Å—Å—á–∏—Ç–∞—Ç—å</button>
      <button onclick="document.location='index.html'">–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</button>
      <div id="creditResult" class="p-2 text-sm text-red-600"></div>
    </div>
  `;
}

function calculateCredit() {
  const amount = parseFloat(document.getElementById("amount").value);
  const down = parseFloat(document.getElementById("down").value);
  const years = parseInt(document.getElementById("years").value);
  const rate = parseFloat(document.getElementById("rate").value);

  const resultDiv = document.getElementById("creditResult");

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—ã–µ –∏–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  if (isNaN(amount) || amount <= 0) {
    resultDiv.innerText = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.";
    return;
  }
  if (isNaN(down) || down < 0 || down >= amount) {
    resultDiv.innerText = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å (–º–µ–Ω—å—à–µ —Å—É–º–º—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏).";
    return;
  }
  if (isNaN(years) || years <= 0) {
    resultDiv.innerText = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ –≤ –≥–æ–¥–∞—Ö.";
    return;
  }
  if (isNaN(rate) || rate <= 0) {
    resultDiv.innerText = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É.";
    return;
  }

  const loan = amount - down;
  const monthlyRate = rate / 100 / 12;
  const months = years * 12;

  const monthlyPayment = (loan * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -months));
  const totalPayment = monthlyPayment * months;
  const overpay = totalPayment - loan;

  Object.assign(resultDiv.style, {
    color: "#00428C",
    fontSize: "24px",
    border: "1px solid #00428C",
    padding: "10px", // —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –Ω–µ –ø—Ä–∏–ª–∏–ø–∞–ª –∫ —Ä–∞–º–∫–µ
    borderRadius: "8px" // –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
  });
  
  resultDiv.innerHTML = `
    üíµ <strong>–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞:</strong> ${loan.toFixed(2)} BYN<br>
    üìÖ <strong>–°—Ä–æ–∫:</strong> ${months} –º–µ—Å.<br>
    üí≥ <strong>–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂:</strong> ${monthlyPayment.toFixed(2)} BYN<br>
    üí∞ <strong>–ü–µ—Ä–µ–ø–ª–∞—Ç–∞ –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º:</strong> ${overpay.toFixed(2)} BYN
  `;
}

showCreditCalc();
